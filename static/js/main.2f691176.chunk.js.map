{"version":3,"sources":["components/reg/reg.js","components/friends/friends.js","App.js","serviceWorker.js","index.js"],"names":["Reg","props","uri","className","version","id","x","y","viewBox","d","href","Friends","first_name","userData","user","last_name","userPic","photo_200_orig","friends","map","item","photo_50","console","log","friendElements","key","src","App","Boolean","window","location","hostname","match","setUser","result","data","response","JSON","stringify","ReactDOM","render","document","getElementById","setFriends","items","autorizationData","token","userID","getCookie","name","matches","cookie","RegExp","replace","decodeURIComponent","undefined","setCookie","value","options","updatedCookie","encodeURIComponent","optionKey","optionValue","hash","slice","indexOf","path","includes","getAutorizationData","script","createElement","getElementsByTagName","appendChild","getUserData","getFriendsData","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f691176.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction Reg(props){\r\n\tlet redirect = 'https://altufjevfrol.github.io/HelloVK'\r\n\tlet uri =`https://oauth.vk.com/authorize?client_id=7222681&display=page&redirect_uri=${redirect}&scope=friends&response_type=token&v=5.52&revoke=1&`\r\n\t\treturn (\r\n\t\t\t\t\t<div className=\"form\">\r\n\t\t\t\t\t\t<div className=\"logo\">\r\n\t\t\t\t\t\t\t<svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 283.5 283.5\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<path className=\"st0\" d=\"M120,70.9h43.5c39.7,0,49.1,9.4,49.1,49.1v43.5c0,39.7-9.4,49.1-49.1,49.1H120c-39.7,0-49.1-9.4-49.1-49.1V120\r\n\t\t\t\t\t\t\t\tC70.9,80.3,80.3,70.9,120,70.9\"/>\r\n\t\t\t\t\t\t\t<path className=\"st1\" d=\"M186.9,119.7c0.7-2.2,0-3.8-3.1-3.8h-10.3c-2.6,0-3.8,1.4-4.5,2.9c0,0-5.3,12.8-12.7,21.1\r\n\t\t\t\t\t\t\t\tc-2.4,2.4-3.5,3.2-4.8,3.2c-0.7,0-1.6-0.8-1.6-3v-20.5c0-2.6-0.8-3.8-3-3.8h-16.2c-1.6,0-2.6,1.2-2.6,2.4c0,2.5,3.7,3.1,4.1,10.1\r\n\t\t\t\t\t\t\t\tv15.2c0,3.3-0.6,3.9-1.9,3.9c-3.5,0-12-12.9-17.1-27.6c-1-2.9-2-4-4.6-4H98.2c-3,0-3.5,1.4-3.5,2.9c0,2.7,3.5,16.3,16.3,34.3\r\n\t\t\t\t\t\t\t\tc8.5,12.3,20.6,18.9,31.5,18.9c6.6,0,7.4-1.5,7.4-4v-9.3c0-3,0.6-3.5,2.7-3.5c1.5,0,4.2,0.8,10.3,6.7c7,7,8.2,10.2,12.1,10.2h10.3\r\n\t\t\t\t\t\t\t\tc3,0,4.4-1.5,3.6-4.4c-0.9-2.9-4.3-7.1-8.7-12.1c-2.4-2.8-6-5.9-7.1-7.4c-1.5-2-1.1-2.8,0-4.6C173,143.5,185.6,125.7,186.9,119.7\"/>\r\n\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<a href={uri}>\r\n\t\t\t\t\t\t\t<div className=\"button\">Авторизоваться</div>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n}\r\n\r\nexport default Reg;","import React from 'react';\r\n\r\n\r\n\r\nfunction Friends(props){\r\n\tlet first_name = props.userData.user.first_name;\r\n\tlet last_name = props.userData.user.last_name;\r\n\tlet userPic = props.userData.user.photo_200_orig;\r\n\r\n\tlet friends = props.userData.friends.map((item)=>{return {first_name: item.first_name, last_name: item.last_name, userPic: item.photo_50, id: item.id }});\r\n\tconsole.log(friends)\r\n\tlet friendElements = friends.map((item)=>{\r\n\t\treturn(\r\n\t\t\t<li key={item.id} className=\"friend\">\r\n\t\t\t\t<figure className=\"avatar\"> <img src={item.userPic}/> </figure>\r\n\t\t\t\t<div className=\"name\">\r\n\t\t\t\t\t<span className=\"first_name\">{item.first_name}</span>\r\n\t\t\t\t\t<span className=\"last_name\">{item.last_name}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</li>\r\n\t\t\t);\r\n\t});\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"user\">\r\n\t\t\t\t\t<figure className=\"avatar\"> <img src={userPic}/> </figure>\r\n\t\t\t\t\t<div className=\"name\">\r\n\t\t\t\t\t\t<span className=\"first_name\">{first_name}</span>\r\n\t\t\t\t\t\t<span className=\"last_name\">{last_name}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<ul className=\"list\">{friendElements}</ul>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t\t\r\n\t}\r\n\r\nexport default Friends;\r\n","import React from 'react';\nimport Reg from './components/reg/reg.js'\nimport Friends from './components/friends/friends.js'\n\n\n\nfunction App(props) {\n\n\tif(props.userData){\n\t\treturn <Friends userData={props.userData}/>\n\t}else{\n\t\treturn <Reg/>\n\t}\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nlet userData={};\n\nwindow.setUser = function (result, data=userData){\n\tif(result.response){\n\t\tdata.user=result.response[0];\n\t\tif(userData.friends){\n\t\t\tconsole.log(JSON.stringify(userData));\n\t\t\tReactDOM.render(<App userData={userData}/>, document.getElementById('root'));\n\t\t\t\n\t\t}\n\t}else{\n\t\tconsole.log('Что то с данными user');\n\t\tReactDOM.render(<App userData={null}/>, document.getElementById('root'));\n\t\t\n\t}\n}\n\nwindow.setFriends = function (result, data=userData){\n\tif(result.response){\n\t\tdata.friends=result.response.items;\n\t\tif(userData.user){\n\t\t\tconsole.log(JSON.stringify(userData));\n\t\t\tReactDOM.render(<App userData={userData}/>, document.getElementById('root'));\n\t\t\t\n\t\t}\n\t}else{\n\t\tconsole.log('Что то с данными friends')\n\t\tReactDOM.render(<App userData={null}/>, document.getElementById('root'));\n\t\t\n\t}\n}\n\nfunction getAutorizationData(){\n\tlet token;\n\tlet userID;\n\n\tfunction getCookie(name) {\n\t\tlet matches = document.cookie.match(new RegExp(\n\t\t\"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n\t\t));\n\t\treturn matches ? decodeURIComponent(matches[1]) : undefined;\n\t}\n\n\tfunction setCookie(name, value, options = {}) {\n\t\tlet updatedCookie = encodeURIComponent(name) + \"=\" + encodeURIComponent(value);\n\n\t\tfor (let optionKey in options) {\n\t\t\tupdatedCookie += \"; \" + optionKey;\n\t\t\tlet optionValue = options[optionKey];\n\t\t\tif (optionValue !== true) {\n\t\t\t\tupdatedCookie += \"=\" + optionValue;\n\t\t\t}\n\t\t}\n\t\tdocument.cookie = updatedCookie;\n\t}/*setCookie('token', token, {path: '/', 'max-age': 604800})*/\n\n\tif(document.location.hash){\n\t\ttoken = document.location.hash.slice(document.location.hash.indexOf('=')+1, document.location.hash.indexOf('&'));\n\t\tuserID = document.location.hash.slice(document.location.hash.indexOf('_id=')+4);\n\t\tsetCookie('token', token, {path: '/', 'max-age': 604800});\n\t\tsetCookie('userID', userID, {path: '/', 'max-age': 604800});\n\t}else if(document.cookie.includes('token')){\n\t\ttoken = getCookie('token');\n\t\tuserID = getCookie('userID');\n\t}\n\tif(token && userID){\n\t\treturn {token: token, userID: userID};\n\t}else return null;\n\t\n}\n\nfunction getUserData(autorizationData=getAutorizationData()){\n\tfunction getUserData(){\n\t\tlet script = document.createElement('SCRIPT');\n\t\tscript.src = `http://api.vk.com/method/users.get?v=5.52&fields=photo_200_orig&access_token=${autorizationData.token}&callback=setUser`;\n\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(script);\n\t}\n\tfunction getFriendsData(){\n\t\tlet script = document.createElement('SCRIPT');\n\t\tscript.src = `http://api.vk.com/method/friends.get?v=5.52&order=random&count=5&fields=photo_50&access_token=${autorizationData.token}&callback=setFriends`;\n\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(script);\n\t}\n\tif(autorizationData){\n\t\tgetUserData();\n\t\tgetFriendsData();\n\t\tconsole.log('запросили ВК')\n\t}else{\n\t\tconsole.log('Авторизаци нет надо бы авторизоваться');\n\t\tReactDOM.render(<App userData={null}/>, document.getElementById('root'));\n\t\t\n\t}\n\n}\n\n\ngetUserData();\n\n\n/*ReactDOM.render(<App userData=''/>, document.getElementById('root'));\n*/\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}