{"version":3,"sources":["components/reg/reg.js","components/friends/friends.js","App.js","serviceWorker.js","index.js"],"names":["Reg","props","uri","className","version","id","x","y","viewBox","d","href","Friends","first_name","userData","user","last_name","userPic","photo_200_orig","friends","map","item","photo_50","console","log","friendElements","key","src","alt","App","Boolean","window","location","hostname","match","setUser","result","data","response","JSON","stringify","ReactDOM","render","document","getElementById","setFriends","items","autorizationData","token","userID","getCookie","name","matches","cookie","RegExp","replace","decodeURIComponent","undefined","setCookie","value","options","updatedCookie","encodeURIComponent","optionKey","optionValue","hash","slice","indexOf","path","includes","getAutorizationData","script","createElement","getElementsByTagName","appendChild","getUserData","getFriendsData","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e539eab.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction Reg(props){\r\n\tlet redirect = 'https://altufjevfrol.github.io/HelloVK';\r\n\tlet uri =`https://oauth.vk.com/authorize?client_id=7222681&display=page&redirect_uri=${redirect}&scope=friends&response_type=token&v=5.52&revoke=1&`\r\n\t\treturn (\r\n\t\t\t\t\t<div className=\"form\">\r\n\t\t\t\t\t\t<div className=\"logo\">\r\n\t\t\t\t\t\t\t<svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 283.5 283.5\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<path className=\"st0\" d=\"M120,70.9h43.5c39.7,0,49.1,9.4,49.1,49.1v43.5c0,39.7-9.4,49.1-49.1,49.1H120c-39.7,0-49.1-9.4-49.1-49.1V120\r\n\t\t\t\t\t\t\t\tC70.9,80.3,80.3,70.9,120,70.9\"/>\r\n\t\t\t\t\t\t\t<path className=\"st1\" d=\"M186.9,119.7c0.7-2.2,0-3.8-3.1-3.8h-10.3c-2.6,0-3.8,1.4-4.5,2.9c0,0-5.3,12.8-12.7,21.1\r\n\t\t\t\t\t\t\t\tc-2.4,2.4-3.5,3.2-4.8,3.2c-0.7,0-1.6-0.8-1.6-3v-20.5c0-2.6-0.8-3.8-3-3.8h-16.2c-1.6,0-2.6,1.2-2.6,2.4c0,2.5,3.7,3.1,4.1,10.1\r\n\t\t\t\t\t\t\t\tv15.2c0,3.3-0.6,3.9-1.9,3.9c-3.5,0-12-12.9-17.1-27.6c-1-2.9-2-4-4.6-4H98.2c-3,0-3.5,1.4-3.5,2.9c0,2.7,3.5,16.3,16.3,34.3\r\n\t\t\t\t\t\t\t\tc8.5,12.3,20.6,18.9,31.5,18.9c6.6,0,7.4-1.5,7.4-4v-9.3c0-3,0.6-3.5,2.7-3.5c1.5,0,4.2,0.8,10.3,6.7c7,7,8.2,10.2,12.1,10.2h10.3\r\n\t\t\t\t\t\t\t\tc3,0,4.4-1.5,3.6-4.4c-0.9-2.9-4.3-7.1-8.7-12.1c-2.4-2.8-6-5.9-7.1-7.4c-1.5-2-1.1-2.8,0-4.6C173,143.5,185.6,125.7,186.9,119.7\"/>\r\n\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<a href={uri}>\r\n\t\t\t\t\t\t\t<div className=\"button\">Авторизоваться</div>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n}\r\n\r\nexport default Reg;","import React from 'react';\r\n\r\n\r\n\r\nfunction Friends(props){\r\n\tlet first_name = props.userData.user.first_name;\r\n\tlet last_name = props.userData.user.last_name;\r\n\tlet userPic = props.userData.user.photo_200_orig;\r\n\r\n\tlet friends = props.userData.friends.map((item)=>{return {first_name: item.first_name, last_name: item.last_name, userPic: item.photo_50, id: item.id }});\r\n\tconsole.log(friends)\r\n\tlet friendElements = friends.map((item)=>{\r\n\t\treturn(\r\n\t\t\t<li key={item.id} className=\"friend\">\r\n\t\t\t\t<figure className=\"avatar\"> <img src={item.userPic} alt={item.first_name}/> </figure>\r\n\t\t\t\t<div className=\"name\">\r\n\t\t\t\t\t<span className=\"first_name\">{item.first_name}</span>\r\n\t\t\t\t\t<span className=\"last_name\">{item.last_name}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</li>\r\n\t\t\t);\r\n\t});\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"user\">\r\n\t\t\t\t\t<figure className=\"avatar\"> <img src={userPic} alt={first_name}/> </figure>\r\n\t\t\t\t\t<div className=\"name\">\r\n\t\t\t\t\t\t<span className=\"first_name\">{first_name}</span>\r\n\t\t\t\t\t\t<span className=\"last_name\">{last_name}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<ul className=\"list\">{friendElements}</ul>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t\t\r\n\t}\r\n\r\nexport default Friends;\r\n","import React from 'react';\r\nimport Reg from './components/reg/reg.js'\r\nimport Friends from './components/friends/friends.js'\r\n\r\n\r\n\r\nfunction App(props) {\r\n\r\n\tif(props.userData){\r\n\t\treturn <Friends userData={props.userData}/>\r\n\t}else{\r\n\t\treturn <Reg/>\r\n\t}\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nlet userData={};\r\n\r\nwindow.setUser = function (result, data=userData){\r\n\tif(result.response){\r\n\t\tdata.user=result.response[0];\r\n\t\tif(userData.friends){\r\n\t\t\tconsole.log(JSON.stringify(userData));\r\n\t\t\tReactDOM.render(<App userData={userData}/>, document.getElementById('root'));\r\n\t\t\t\r\n\t\t}\r\n\t}else{\r\n\t\tconsole.log('Что то с данными user');\r\n\t\tReactDOM.render(<App userData={null}/>, document.getElementById('root'));\r\n\t\t\r\n\t}\r\n}\r\n\r\nwindow.setFriends = function (result, data=userData){\r\n\tif(result.response){\r\n\t\tdata.friends=result.response.items;\r\n\t\tif(userData.user){\r\n\t\t\tconsole.log(JSON.stringify(userData));\r\n\t\t\tReactDOM.render(<App userData={userData}/>, document.getElementById('root'));\r\n\t\t\t\r\n\t\t}\r\n\t}else{\r\n\t\tconsole.log('Что то с данными friends')\r\n\t\tReactDOM.render(<App userData={null}/>, document.getElementById('root'));\r\n\t\t\r\n\t}\r\n}\r\n\r\nfunction getAutorizationData(){\r\n\tlet token;\r\n\tlet userID;\r\n\r\n\tfunction getCookie(name) {\r\n\t\tlet matches = document.cookie.match(new RegExp(\r\n\t\t\"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n\t\t));\r\n\t\treturn matches ? decodeURIComponent(matches[1]) : undefined;\r\n\t}\r\n\r\n\tfunction setCookie(name, value, options = {}) {\r\n\t\tlet updatedCookie = encodeURIComponent(name) + \"=\" + encodeURIComponent(value);\r\n\r\n\t\tfor (let optionKey in options) {\r\n\t\t\tupdatedCookie += \"; \" + optionKey;\r\n\t\t\tlet optionValue = options[optionKey];\r\n\t\t\tif (optionValue !== true) {\r\n\t\t\t\tupdatedCookie += \"=\" + optionValue;\r\n\t\t\t}\r\n\t\t}\r\n\t\tdocument.cookie = updatedCookie;\r\n\t}/*setCookie('token', token, {path: '/', 'max-age': 604800})*/\r\n\r\n\tif(document.location.hash){\r\n\t\ttoken = document.location.hash.slice(document.location.hash.indexOf('=')+1, document.location.hash.indexOf('&'));\r\n\t\tuserID = document.location.hash.slice(document.location.hash.indexOf('_id=')+4);\r\n\t\tsetCookie('token', token, {path: '/', 'max-age': 604800});\r\n\t\tsetCookie('userID', userID, {path: '/', 'max-age': 604800});\r\n\t}else if(document.cookie.includes('token')){\r\n\t\ttoken = getCookie('token');\r\n\t\tuserID = getCookie('userID');\r\n\t}\r\n\tif(token && userID){\r\n\t\treturn {token: token, userID: userID};\r\n\t}else return null;\r\n\t\r\n}\r\n\r\nfunction getUserData(autorizationData=getAutorizationData()){\r\n\tfunction getUserData(){\r\n\t\tlet script = document.createElement('SCRIPT');\r\n\t\tscript.src = `https://api.vk.com/method/users.get?v=5.52&fields=photo_200_orig&access_token=${autorizationData.token}&callback=setUser`;\r\n\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(script);\r\n\t}\r\n\tfunction getFriendsData(){\r\n\t\tlet script = document.createElement('SCRIPT');\r\n\t\tscript.src = `https://api.vk.com/method/friends.get?v=5.52&order=random&count=5&fields=photo_50&access_token=${autorizationData.token}&callback=setFriends`;\r\n\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(script);\r\n\t}\r\n\tif(autorizationData){\r\n\t\tgetUserData();\r\n\t\tgetFriendsData();\r\n\t\tconsole.log('запросили ВК')\r\n\t}else{\r\n\t\tconsole.log('Авторизаци нет надо бы авторизоваться');\r\n\t\tReactDOM.render(<App userData={null}/>, document.getElementById('root'));\r\n\t\t\r\n\t}\r\n\r\n}\r\n\r\n\r\ngetUserData();\r\n\r\n\r\n/*ReactDOM.render(<App userData=''/>, document.getElementById('root'));\r\n*/\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}